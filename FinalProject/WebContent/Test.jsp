/*
* Generated by the Jasper component of Apache Tomcat
* Version: Apache Tomcat/9.0.8
* Generated at: 2018-06-11 05:40:36 UTC
* Note: The last modified time of this file was set to
* the last modified time of the source file after
* generation to assist with modification tracking.
*/
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import check.Project;
import java.util.ArrayList;
import check.Task;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public final class project_jsp extends org.apache.jasper.runtime.HttpJspBase
implements org.apache.jasper.runtime.JspSourceDependent,
org.apache.jasper.runtime.JspSourceImports {

private static final javax.servlet.jsp.JspFactory _jspxFactory =
javax.servlet.jsp.JspFactory.getDefaultFactory();

private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

private static final java.util.Set<java.lang.String> _jspx_imports_packages;

private static final java.util.Set<java.lang.String> _jspx_imports_classes;

static {
_jspx_imports_packages = new java.util.HashSet<>();
_jspx_imports_packages.add("javax.servlet");
_jspx_imports_packages.add("javax.servlet.http");
_jspx_imports_packages.add("javax.servlet.jsp");
_jspx_imports_classes = new java.util.HashSet<>();
_jspx_imports_classes.add("check.Project");
_jspx_imports_classes.add("check.Task");
_jspx_imports_classes.add("java.util.Map");
_jspx_imports_classes.add("java.util.HashMap");
_jspx_imports_classes.add("java.util.ArrayList");
}

private volatile javax.el.ExpressionFactory _el_expressionfactory;
private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
return _jspx_dependants;
}

public java.util.Set<java.lang.String> getPackageImports() {
return _jspx_imports_packages;
}

public java.util.Set<java.lang.String> getClassImports() {
return _jspx_imports_classes;
}

public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
if (_el_expressionfactory == null) {
synchronized (this) {
if (_el_expressionfactory == null) {
_el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
}
}
}
return _el_expressionfactory;
}

public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
if (_jsp_instancemanager == null) {
synchronized (this) {
if (_jsp_instancemanager == null) {
_jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
}
}
}
return _jsp_instancemanager;
}

public void _jspInit() {
}

public void _jspDestroy() {
}

public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
throws java.io.IOException, javax.servlet.ServletException {

if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
final java.lang.String _jspx_method = request.getMethod();
if ("OPTIONS".equals(_jspx_method)) {
response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
return;
}
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
return;
}
}

final javax.servlet.jsp.PageContext pageContext;
javax.servlet.http.HttpSession session = null;
final javax.servlet.ServletContext application;
final javax.servlet.ServletConfig config;
javax.servlet.jsp.JspWriter out = null;
final java.lang.Object page = this;
javax.servlet.jsp.JspWriter _jspx_out = null;
javax.servlet.jsp.PageContext _jspx_page_context = null;


try {
response.setContentType("text/html;charset=UTF-8");
pageContext = _jspxFactory.getPageContext(this, request, response,
null, true, 8192, true);
_jspx_page_context = pageContext;
application = pageContext.getServletContext();
config = pageContext.getServletConfig();
session = pageContext.getSession();
out = pageContext.getOut();
_jspx_out = out;

out.write('\n');
out.write("\n");
out.write("\n");
out.write("<!DOCTYPE html>\n");
out.write("<html>\n");
out.write("<head>\n");
out.write("\t<meta charset=\"utf-8\">\n");
out.write("\t<title>test</title>\n");
out.write("\t<link rel=\"stylesheet\"\n");
out.write("\t\t href=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n");
out.write("\t<script src=\"javascript/jquery-1.12.4.min.js\"></script>\n");
out.write("\t<script\n");
out.write("\t\t\tsrc=\"https://cdn.bootcss.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n");
out.write("\t<link rel=\"stylesheet\"\n");
out.write("\t\t href=\"https://use.fontawesome.com/releases/v5.0.13/css/all.css\"\n");
out.write("\t\t integrity=\"sha384-DNOHZ68U8hZfKXOrtjWvjxusGo9WQnrNx2sqG0tfsghAvtVlRW3tvkXWZh58N9jp\"\n");
out.write("\t\t crossorigin=\"anonymous\">\n");
out.write("\t<link rel=\"stylesheet\" href=\"css/project.css\">\n");
out.write("\n");
out.write("</head>\n");
out.write("<body>\n");
out.write("\n");
out.write("<script>\n");
out.write("\n");
out.write(" window.onload = function() {\n");
out.write(" ");

Map<String, Map<String, Boolean> > userTaskMap = new HashMap<>();

// Map that has userName to map of tasks with name and completed boolean
// System.out.println("we are all in this together");
// System.out.println(request.getSession().getAttribute("userTaskMap"));
userTaskMap = ( Map<String, Map<String, Boolean> >) request.getSession().getAttribute("userTaskMap");

int numUsers = userTaskMap.size();
System.out.println("numUsrs= "+numUsers);
ArrayList<String> userNames = (ArrayList<String>)request.getSession().getAttribute("userNames");
for(int i = 0; i < userNames.size(); i++) {

out.write("\n");
out.write(" var userCard = document.getElementById(\"userCard\"+parseInt(");
out.print(i);
out.write("+1));\n");
out.write(" var title = document.createElement('h2');\n");
out.write(" title.innerHTML = \"");
out.print( userNames.get(i) );
out.write("\";\n");
out.write(" userCard.appendChild(title);\n");
out.write(" ");
out.write("\n");
out.write(" var content = document.createElement('div');\n");
out.write(" content.className = \"tdl-content\"+parseInt(");
out.print(i);
out.write("+1);\n");
out.write(" ");

String username = (String)request.getSession().getAttribute("username");
if(userNames.get(i).equals(username)){
request.getSession().setAttribute("tdl-content", "tdl-content"+(i+1));
}
Map<String, Boolean> userTasks = userTaskMap.get(userNames.get(i));
ArrayList<String> tasksForUser = new ArrayList<String>();

if (userTasks!=null && userTasks.size() > 1) {
System.out.println("userTasks="+userTasks);
userTasks.forEach((k, v) -> tasksForUser.add(k));


for (int j=0; j<tasksForUser.size(); j++){

out.write("\n");
out.write(" var listItem = document.createElement('li');\n");
out.write(" var label = document.createElement('label');\n");
out.write(" var checkbox = document.createElement('input');\n");
out.write(" checkbox.type = \"checkbox\";\n");
out.write(" var circle = document.createElement('i');\n");
out.write(" var span = document.createElement('span');\n");
out.write(" ");

if(tasksForUser != null){
if(userTasks.get(tasksForUser.get(j))){

out.write("\n");
out.write("\n");
out.write(" checkbox.checked = true;\n");
out.write(" ");


}

out.write("\n");
out.write(" span.innerHTML = \"");
out.print( tasksForUser.get(j) );
out.write("\";\n");
out.write(" label.appendChild(checkbox);\n");
out.write(" label.appendChild(circle);\n");
out.write(" label.appendChild(span);\n");
out.write(" listItem.appendChild(label);\n");
out.write(" content.appendChild(listItem);\n");
out.write(" userCard.appendChild(content);\n");
out.write(" ");

}

out.write("\n");
out.write(" ");

}

out.write("\n");
out.write(" // Adds users tasks to the card\n");
out.write("\n");
out.write("\n");
out.write(" // Add the progress bar\n");
out.write(" var progressBarDiv = document.createElement('div');\n");
out.write(" progressBarDiv.className = \"progress\";\n");
out.write(" var progressBar = document.createElement('div');\n");
out.write(" progressBar.className = \"progress-bar bg-dark progress-bar-striped\";\n");
out.write(" progressBar.style.width = \"25%\";\n");
out.write(" // \t\t\tprogressBar.style.aria-valuenow = \"25\";\n");
out.write(" // \t\t\tprogressBar.style.aria-valuemin = \"0\";\n");
out.write(" // \t\t\tprogressBar.style.aria-valuemax = \"100\";\n");
out.write("\n");
out.write(" progressBarDiv.appendChild(progressBar);\n");
out.write(" userCard.appendChild(progressBarDiv);\n");
out.write(" ");

}

out.write("\n");
out.write(" ");


ArrayList<Task> unassignedTasks = new ArrayList<Task>();
unassignedTasks = (ArrayList<Task>) request.getSession().getAttribute("unassignedTasks");
System.out.println("unASS: " + unassignedTasks);
// Map that has userName to map of tasks with name and completed boolean
// System.out.println("we are all in this together");
// System.out.println(request.getSession().getAttribute("userTaskMap"));


out.write("\n");
out.write(" var projectTaskList = document.getElementById(\"projectTasksList\");\n");
out.write("\n");
out.write(" ");
out.write("\n");
out.write(" /* var content = document.createElement('div');\n");
out.write(" content.className = \"tdl-content\"; */\n");
out.write(" var content2 = document.getElementById('projectListDiv');\n");
out.write(" var list = document.createElement('ul');\n");
out.write("\n");
out.write("\n");
out.write(" ");

if (unassignedTasks!= null) {

for(int i = 0; i < unassignedTasks.size(); i++) {
System.out.println(" "+unassignedTasks.get(i).getTaskID());

out.write("\n");
out.write(" var listItem = document.createElement('li');\n");
out.write(" var label = document.createElement('label');\n");
out.write(" var add = document.createElement('i');\n");
out.write(" var span = document.createElement('span');\n");
out.write(" var link = document.createElement('a');\n");
out.write(" link.name = \"");
out.print(unassignedTasks.get(i).getTaskID());
out.write("\";\n");
out.write(" link.innerHTML = \"+\";\n");
out.write(" span.innerHTML = \"");
out.print( unassignedTasks.get(i).getTask() );
out.write("\";\n");
out.write(" label.appendChild(link);\n");
out.write(" label.appendChild(add);\n");
out.write(" label.appendChild(span);\n");
out.write(" listItem.appendChild(label);\n");
out.write(" list.appendChild(listItem);\n");
out.write(" ");


}

out.write("\n");
out.write("\n");
out.write(" content2.appendChild(list);\n");
out.write(" ");

}

else {

out.write("\n");
out.write(" var listItem = document.createElement('li');\n");
out.write(" listItem.appendChild(label);\n");
out.write(" ");

}

out.write("\n");
out.write("\n");
out.write(" list.appendChild(listItem);\n");
out.write(" content.appendChild(list);\n");
out.write("\n");
out.write(" }\n");
out.write("\n");
out.write("\n");
out.write("</script>\n");
out.write("\n");
out.write("<!-- side bar -->\n");
out.write("<div id=\"mySidenav\" class=\"sidenav\">\n");
out.write("\t<img id=\"avatar\" src=\"https://www.w3schools.com/howto/img_avatar.png\"\n");
out.write("\t\t width=\"100\" height=\"100\" /> <a id=\"name\" href=\"profile.jsp\">");
    out.print(request.getSession().getAttribute("username") );
    out.write("</a> <span id=\"projectDirection\"></span>\n");
out.write("\t<form action=\"createProject.jsp\" method=\"POST\" class=\"form create project\">\n");
out.write("\t\t<a id=\"createProject\">Create a Project</a>\n");
out.write("\t\t<input id=\"createProjectBar\" type=\"text\" name=\"projectName\" class=\"form__input\" placeholder=\"Project Code\">\n");
out.write("\t</form><a id=\"logoutButton\"\n");
out.write("\n");
out.write("\t\t\t href=\"login.jsp\">Log out</a>\n");
out.write("</div>\n");
out.write("\n");
out.write("<div id=\"main\">\n");
out.write("\t<!-- header -->\n");
out.write("\t<div class=\"header\">\n");
out.write("\t\t<h1>\n");
out.write("\t\t\t<a href=\"#\">CheckMate</a>\n");
out.write("\t\t</h1>\n");
out.write("\t\t<i class=\"fas fa-check-square fa-4x\"></i> <i id=\"searchProjectButton\"\n");
                                                              out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t class=\"fas fa-search fa-4x\"></i>
<input class=\"searchProjectCode\"\n");
       out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t type=\"text\" name=\"projectID\">\n");
out.write("\t</div>\n");
out.write("\t<div onclick=\"changeNav()\">\n");
out.write("\t\t<i id=\"navButton\" class=\"fas fa-arrow-right fa-7x\"></i>\n");
out.write("\t</div>\n");
out.write("\t<!-- content -->\n");
out.write("\t<div id=\"container\">\n");
out.write("\t\t<div class=\"UsersTask\">\n");
out.write("\t\t\t<div id=\"userCard1\" class=\"tdl-holder\">\n");
out.write("\t\t\t\t<!-- \t\t\t\t\t<h2>User 1</h2> -->\n");
out.write("\t\t\t\t<!-- \t\t\t\t\t<div class=\"tdl-content1\"> -->\n");
out.write("\t\t\t\t<!-- \t\t\t\t\t\t<ul> -->\n");
out.write("\t\t\t\t<!-- \t\t\t\t\t\t</ul> -->\n");
out.write("\t\t\t\t<!-- \t\t\t\t\t</div> -->\n");
out.write("\t\t\t\t<!-- \t\t\t\t\t<div class=\"progress\"> -->\n");
out.write("\t\t\t\t<!-- \t\t\t\t\t\t<div class=\"progress-bar bg-success progress-bar-striped\" -->\n");
out.write("\t\t\t\t<!-- \t\t\t\t\t\t\trole=\"progressbar\" style=\"width: 25%\" aria-valuenow=\"25\" -->\n");
out.write("\t\t\t\t<!-- \t\t\t\t\t\t\taria-valuemin=\"0\" aria-valuemax=\"100\"></div> -->\n");
out.write("\t\t\t\t<!-- \t\t\t\t\t</div> -->\n");
out.write("\t\t\t</div>\n");
out.write("\t\t\t<div id=\"userCard2\" class=\"tdl-holder\">\n");
out.write("\t\t\t\t<!-- <h2>User 2</h2> -->\n");
out.write("\t\t\t\t<!-- <div class=\"tdl-content2\"> -->\n");
out.write("\t\t\t\t<!-- <ul> -->\n");
out.write("\t\t\t\t<!-- </ul> -->\n");
out.write("\t\t\t\t<!-- </div> -->\n");
out.write("\t\t\t\t<!-- <div class=\"progress\"> -->\n");
out.write("\t\t\t\t<!-- <div class=\"progress-bar bg-dark progress-bar-striped\" role=\"progressbar\" style=\"width: 25%\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div> -->\n");
out.write("\t\t\t\t<!-- </div> -->\n");
out.write("\t\t\t</div>\n");
out.write("\t\t\t<div id=\"userCard3\" class=\"tdl-holder\">\n");
out.write("\t\t\t\t<!-- <h2>User 3</h2> -->\n");
out.write("\t\t\t\t<!-- <div class=\"tdl-content3\"> -->\n");
out.write("\t\t\t\t<!-- <ul> -->\n");
out.write("\t\t\t\t<!-- </ul> -->\n");
out.write("\t\t\t\t<!-- </div> -->\n");
out.write("\t\t\t\t<!-- <div class=\"progress\"> -->\n");
out.write("\t\t\t\t<!-- <div class=\"progress-bar bg-warning progress-bar-striped\" role=\"progressbar\" style=\"width: 25%\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div> -->\n");
out.write("\t\t\t\t<!-- </div> -->\n");
out.write("\t\t\t</div>\n");
out.write("\t\t\t<div id=\"userCard4\" class=\"tdl-holder\">\n");
out.write("\t\t\t\t<!-- <h2>User 3</h2> -->\n");
out.write("\t\t\t\t<!-- <div class=\"tdl-content4\"> -->\n");
out.write("\t\t\t\t<!-- <ul> -->\n");
out.write("\t\t\t\t<!-- </ul> -->\n");
out.write("\t\t\t\t<!-- </div> -->\n");
out.write("\t\t\t\t<!-- <div class=\"progress\"> -->\n");
out.write("\t\t\t\t<!-- <div class=\"progress-bar bg-warning progress-bar-striped\" role=\"progressbar\" style=\"width: 25%\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div> -->\n");
out.write("\t\t\t\t<!-- </div> -->\n");
out.write("\t\t\t</div>\n");
out.write("\t\t\t<div id=\"userCard5\" class=\"tdl-holder\">\n");
out.write("\t\t\t\t<!-- <h2>User 3</h2> -->\n");
out.write("\t\t\t\t<!-- <div class=\"tdl-content4\"> -->\n");
out.write("\t\t\t\t<!-- <ul> -->\n");
out.write("\t\t\t\t<!-- </ul> -->\n");
out.write("\t\t\t\t<!-- </div> -->\n");
out.write("\t\t\t\t<!-- <div class=\"progress\"> -->\n");
out.write("\t\t\t\t<!-- <div class=\"progress-bar bg-warning progress-bar-striped\" role=\"progressbar\" style=\"width: 25%\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div> -->\n");
out.write("\t\t\t\t<!-- </div> -->\n");
out.write("\t\t\t</div>\n");
out.write("\t\t\t<div id=\"userCard6\" class=\"tdl-holder\">\n");
out.write("\t\t\t\t<!-- <h2>User 3</h2> -->\n");
out.write("\t\t\t\t<!-- <div class=\"tdl-content4\"> -->\n");
out.write("\t\t\t\t<!-- <ul> -->\n");
out.write("\t\t\t\t<!-- </ul> -->\n");
out.write("\t\t\t\t<!-- </div> -->\n");
out.write("\t\t\t\t<!-- <div class=\"progress\"> -->\n");
out.write("\t\t\t\t<!-- <div class=\"progress-bar bg-warning progress-bar-striped\" role=\"progressbar\" style=\"width: 25%\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div> -->\n");
out.write("\t\t\t\t<!-- </div> -->\n");
out.write("\t\t\t</div>\n");
out.write("\t\t</div>\n");
out.write("\t\t<div class=\"ProjectTasks\">\n");
out.write("\t\t\t<div id=\"projectTasksList\" class=\"tdl-holder\">\n");
out.write("\t\t\t\t<h2>Unassigned Tasks</h2>\n");
out.write("\t\t\t\t<div id=\"projectListDiv\" class=\"tdl-content\"></div>\n");
out.write("\t\t\t\t<input type=\"text\" class=\"tdl-new\"\n");
out.write("\t\t\t\t\t placeholder=\"Enter a new task...\">\n");
out.write("\t\t\t</div>\n");
out.write("\t\t</div>\n");
out.write("\t</div>\n");
out.write("\t<div class=\"bottom\">\n");
out.write("\t\t<div class=\"progress-bar bg-success progress-bar-striped\"\n");
out.write("\t\t\t role=\"progressbar\" style=\"width: 100%\" aria-valuenow=\"25\"\n");
out.write("\t\t\t aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n");
out.write("\t</div>\n");
out.write("</div>\n");
out.write("<script>\n");
out.write("\n");
out.write(" var isOpen = false;\n");
out.write(" var tasks = 100;//how many tasks total user needs to do;\n");
out.write(" ");
String usr =(String) request.getSession().getAttribute("username");
out.write("\n");
out.write(" console.log(\"");
out.print(usr);
out.write("\");\n");
out.write(" var username = \"");
out.print(usr);
out.write("\";\n");
out.write(" var Projects = null;//should be a project array.\n");
out.write(" var user;\n");
out.write(" function openNav() {\n");
out.write(" document.getElementById(\"mySidenav\").style.width = \"250px\";\n");
out.write(" document.getElementById(\"main\").style.marginLeft = \"250px\";\n");
out.write(" document.getElementById(\"navButton\").style.transform = \"rotate(180deg)\";\n");
out.write(" isOpen = true;\n");
out.write(" }\n");
out.write("\n");
out.write(" function closeNav() {\n");
out.write(" document.getElementById(\"mySidenav\").style.width = \"0\";\n");
out.write(" document.getElementById(\"main\").style.marginLeft = \"0\";\n");
out.write(" document.getElementById(\"navButton\").style.transform = \"\";\n");
out.write(" isOpen = false;\n");
out.write(" }\n");
out.write("\n");
out.write(" function changeNav() {\n");
out.write(" if (isOpen) closeNav();\n");
out.write(" else openNav();\n");
out.write(" }\n");
out.write("\n");
out.write("\n");
out.write(" var userProjects;\n");
out.write(" ");
ArrayList<Project> userProjects =(ArrayList<Project>) request.getSession().getAttribute("userProjects");
for (i = 0; i < userProjects.size(); i++){
out.write("\n");
out.write(" $(\"#projectDirection\").append(\"<a href='#' onclick='jumpToProject(\\\"");
out.print(userProjects.get(i).getID());
out.write("\\\")\" + \"'>\" + \"");
out.print(userProjects.get(i).getTitle());
out.write("\" + \"</a>\");\n");
out.write("\n");
out.write(" ");
}
out.write("\n");
out.write("\n");
out.write(" function jumpToProject(projectID, userID){\n");
out.write("\n");
out.write(" var url = \"LoadProjectData\";\n");
out.write(" $.ajax({\n");
out.write(" type : \"GET\",\n");
out.write(" url : url,\n");
out.write(" data : {\n");
out.write(" projectID: projectID,\n");
out.write(" userID: userID,\n");
out.write(" },\n");
out.write(" // Runs once the request returns\n");
out.write(" success : function(content) {\n");
out.write(" console.log(\"going to swervlet\");\n");
out.write(" location.href = \"project.jsp\";\n");
out.write(" // \t sendUpdateToAllOtherUsers();\n");
out.write(" }\n");
out.write(" });\n");
out.write(" }\n");
out.write("\n");
out.write("\n");
out.write(" /* TO DO LIST */\n");
out.write("\n");
out.write(" //when hitting the button to create a task;\n");
out.write(" $(\".tdl-new\").bind('keypress', function(e){\n");
out.write(" var code = (e.keyCode ? e.keyCode : e.which);\n");
out.write(" if(code == 13) {\n");
out.write(" var v = $(this).val();\n");
out.write(" var s = v.replace(/ +?/g, '');\n");
out.write(" if (s == \"\"){\n");
out.write(" return false;\n");
out.write(" }else{\n");
out.write("\n");
out.write(" // Send the update to the database\n");
out.write(" var taskTitle = $(this).val();\n");
out.write(" var projectID = \"");
out.print(request.getSession().getAttribute("projectID"));
out.write("\";\n");
out.write(" //console.log(taskTitle);\n");
out.write(" //var taskID = addTaskInDatabase(taskTitle, projectID);\n");
out.write("\n");
out.write(" var url = \"UpdateDatabase?queryType=addTask&title=\"+taskTitle+\"&projectID=\"+projectID;\n");
out.write(" var databaseRequest = new XMLHttpRequest();\n");
out.write(" databaseRequest.open('GET', url, true);\n");
out.write(" databaseRequest.send();\n");
out.write("\n");
out.write(" databaseRequest.onload = function() {\n");
out.write(" console.log(\"database response = \"+databaseRequest.response);\n");
out.write(" var taskID = databaseRequest.response;\n");
out.write(" $(\".tdl-content \").append(\"<li><label><i></i><span class=\\\"val\\\">\"+ v +\"</span><a name=\\\"\"+taskID+\"\\\" href='#'>+</a></label></li>\");\n");
out.write(" }\n");
out.write(" $(this).val(\"\");\n");
out.write("\n");
out.write(" }\n");
out.write(" }\n");
out.write(" });\n");
out.write("\n");
out.write("\n");
out.write(" // when you add a task into your task list;\n");
out.write(" $(\".tdl-content\").on('click', \"a\", function(){\n");
out.write(" var _li = $(this).parent().parent(\"li\");\n");
out.write(" var userTaskList = (\"");
out.print(request.getSession().getAttribute("tdl-content"));
out.write("\");\n");
out.write(" var userID = \"");
out.print(request.getSession().getAttribute("userID"));
out.write("\";\n");
out.write(" console.log(");
out.print(request.getSession().getAttribute("userID"));
out.write(");\n");
out.write(" console.log(\"taskID = \"+(this).name);\n");
out.write("\n");
out.write(" var taskID = (this).name;\n");
out.write(" console.log(\"taskID = \"+ taskID);\n");
out.write(" var url = \"UpdateDatabase?queryType=assignTask&userID=\"+userID+\"&taskID=\"+taskID;\n");
out.write(" var databaseRequest = new XMLHttpRequest();\n");
out.write(" databaseRequest.open('GET', url, true);\n");
out.write(" databaseRequest.send();\n");
out.write("\n");
out.write(" databaseRequest.onload = function() {\n");
out.write(" console.log(\"database response = \"+databaseRequest.response);\n");
out.write(" var taskID = databaseRequest.response;\n");
out.write(" //$(\".tdl-content \").append(\"<li><label><i></i><span class=\\\"val\\\">\"+ v +\"</span><a name=\\\"\"+taskID+\"\\\" href='#'>+</a></label></li>\");\n");
out.write(" $(\".");
out.print(request.getSession().getAttribute("tdl-content"));
out.write("\").append(\"<li><label><input type=\\\"checkbox\\\" unchecked><i></i><span class=\\\"val\\\">\"+ _li.find(\"span\").text()+\"</label></li>\");\n");
out.write(" }\n");
out.write(" $(this).val(\"\");\n");
out.write(" _li.addClass(\"remove\").stop().delay(100).slideUp(\"fast\", function(){\n");
out.write(" _li.remove();\n");
out.write(" });\n");
out.write(" return false;\n");
out.write(" });\n");
out.write("\n");
out.write(" $(\"#createProjectBar\").toggle();\n");
out.write(" $('#createProject').click(function () {\n");
out.write(" $(\"#createProjectBar\").toggle();\n");
out.write(" return false;\n");
out.write(" });\n");
out.write("\n");
out.write("\n");
out.write(" </script>\n ");
out.write("</body>\n ");
out.write("</html>\n ");
} catch (java.lang.Throwable t){
if (!(t instanceof javax.servlet.jsp.SkipPageException)){
out = _jspx_out;
if (out != null && out.getBufferSize() != 0)

try {
if (response.isCommitted()) {
out.flush();
} else {
out.clearBuffer();
}
} catch (java.io.IOException e) {}
if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
else throw new ServletException(t);
}
} finally {
_jspxFactory.releasePageContext(_jspx_page_context);
}
}
}
}